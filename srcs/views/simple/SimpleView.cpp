#include "Bomberman.hpp"

// STATIC ########################################################

// ###############################################################

// CANONICAL #####################################################

SimpleView::SimpleView ( void ) : AbstractView()
{
	this->map[GLFW_KEY_H] = new PressKeyH();

	std::cout << "cococo" << std::endl;
	return ;
}

SimpleView::SimpleView ( SimpleView const & src )
{
	*this = src;
	return ;
}

SimpleView &				SimpleView::operator=( SimpleView const & rhs )
{
	if (this != &rhs)
	{
		// make stuff
	}
	return (*this);
}

SimpleView::~SimpleView ( void )
{
	return ;
}

// ###############################################################

// CONSTRUCTOR POLYMORPHISM ######################################

// ###############################################################

// OVERLOAD OPERATOR #############################################

std::ostream &				operator<<(std::ostream & o, SimpleView const & i)
{
	(void)i;
	return (o);
}

// ###############################################################

// PUBLIC METHOD #################################################

void									pressHKey(AbstractView & view)
{
	std::cout << "Im in pressHKey" << std::endl;
}

// ###############################################################

// GETTER METHOD #################################################

// ###############################################################

// SETTER METHOD #################################################

// ###############################################################

// PRIVATE METHOD ################################################

// ###############################################################

// EXCEPTION METHOD ##############################################

// ###############################################################

// EXTERNAL ######################################################

// ###############################################################
